@model IEnumerable<FaultReportingSystem.Models.SoftwareProduct>

@{
    ViewData["Title"] = "Software Products";
    string? ActiveUserType = ViewData["LoggedUserType"] as string;
    var SoftwareProductModificationMessage = TempData["SoftwareProductModificationMessage"] as string;
}
<div class="d-flex justify-content-between align-items-center mb-4">
    <h1>Our Software Products</h1>
    @{
        @if (ActiveUserType == "Manager" || ActiveUserType == "SystemAdministrator")
        {
            <a asp-action="Create" class="btn btn-outline-primary">Add New Product</a>
        }
    }
</div>
<hr />
@if (!string.IsNullOrEmpty(SoftwareProductModificationMessage))
{
    <div class="alert alert-success alert-fade" role="alert">
    @SoftwareProductModificationMessage
</div>
}
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.ProductName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ProductDescription)
            </th>
            @{
                @if (ActiveUserType == "Manager" || ActiveUserType == "SystemAdministrator")
                {
                    <th>Actions</th>
                }
            }
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.ProductName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ProductDescription)
                </td>
                @if (ActiveUserType == "Manager" || ActiveUserType == "SystemAdministrator")
                {
                    <td>
                        <a asp-action="Edit" class="btn btn-outline-primary" asp-route-id="@item.SoftwareProductId">Edit</a>
                        <a asp-action="Delete" class="btn btn-outline-danger" asp-route-id="@item.SoftwareProductId">Delete</a>
                    </td>
                }
            </tr>
        }
    </tbody>
</table>